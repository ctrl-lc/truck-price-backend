<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0525.1210                               -->
<workbook original-version='18.1' source-build='2020.2.1 (20202.20.0525.1210)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <ISO8601PeriodTypes />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='archive' inline='true' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='archive' name='excel-direct.18wsbqd1gtc7wx192qned1eeh2g7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/a.leshchenko/OneDrive/Документы/Контрол/Stocks/data/archive.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.18wsbqd1gtc7wx192qned1eeh2g7' name='archive' table='[archive$]' type='table'>
          <columns gridOrigin='A1:R10001:no:A1:R10001:0' header='yes' outcome='2'>
            <column datatype='string' name='URL' ordinal='0' />
            <column datatype='integer' name='Mileage' ordinal='1' />
            <column datatype='integer' name='HP' ordinal='2' />
            <column datatype='string' name='Make' ordinal='3' />
            <column datatype='string' name='Gear' ordinal='4' />
            <column datatype='string' name='Formula' ordinal='5' />
            <column datatype='integer' name='Year' ordinal='6' />
            <column datatype='integer' name='Price' ordinal='7' />
            <column datatype='string' name='Model' ordinal='8' />
            <column datatype='string' name='Supplier' ordinal='9' />
            <column datatype='string' name='Location' ordinal='10' />
            <column datatype='real' name='Price 1' ordinal='11' />
            <column datatype='date' name='Date' ordinal='12' />
            <column datatype='integer' name='CabSeats' ordinal='13' />
            <column datatype='integer' name='CabBeds' ordinal='14' />
            <column datatype='string' name='﻿VehicleType' ordinal='15' />
            <column datatype='string' name='confidence' ordinal='16' />
            <column datatype='string' name='Result' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.18wsbqd1gtc7wx192qned1eeh2g7' name='archive' table='[archive$]' type='table'>
          <columns gridOrigin='A1:R10001:no:A1:R10001:0' header='yes' outcome='2'>
            <column datatype='string' name='URL' ordinal='0' />
            <column datatype='integer' name='Mileage' ordinal='1' />
            <column datatype='integer' name='HP' ordinal='2' />
            <column datatype='string' name='Make' ordinal='3' />
            <column datatype='string' name='Gear' ordinal='4' />
            <column datatype='string' name='Formula' ordinal='5' />
            <column datatype='integer' name='Year' ordinal='6' />
            <column datatype='integer' name='Price' ordinal='7' />
            <column datatype='string' name='Model' ordinal='8' />
            <column datatype='string' name='Supplier' ordinal='9' />
            <column datatype='string' name='Location' ordinal='10' />
            <column datatype='real' name='Price 1' ordinal='11' />
            <column datatype='date' name='Date' ordinal='12' />
            <column datatype='integer' name='CabSeats' ordinal='13' />
            <column datatype='integer' name='CabBeds' ordinal='14' />
            <column datatype='string' name='﻿VehicleType' ordinal='15' />
            <column datatype='string' name='confidence' ordinal='16' />
            <column datatype='string' name='Result' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[archive]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R10001:no:A1:R10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>URL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[URL]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>URL</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mileage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Mileage]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>Mileage</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HP]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>HP</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gear</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gear]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>Gear</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Formula</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Formula]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>Formula</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Supplier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Supplier]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>Supplier</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price 1]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>Price 1</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CabSeats</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CabSeats]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>CabSeats</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CabBeds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CabBeds]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>CabBeds</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>﻿VehicleType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[﻿VehicleType]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>﻿VehicleType</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>confidence</remote-name>
            <remote-type>130</remote-type>
            <local-name>[confidence]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>confidence</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Result</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Result]</local-name>
            <parent-name>[archive]</parent-name>
            <remote-alias>Result</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[CabBeds]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[CabSeats]' role='dimension' type='ordinal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Records]) / TOTAL(SUM([Number of Records]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Доска' datatype='string' name='[Calculation_1581607932506763264]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REGEXP_EXTRACT([URL], &quot;(\w*\.ru)&quot;)' />
      </column>
      <column caption='Выгода в %' datatype='real' name='[Calculation_410672030772486144]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Price 1]/[Price]-1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[HP]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Make (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Make]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Тягачи - Европейцы&quot;'>
            <value>&quot;DAF&quot;</value>
            <value>&quot;IVECO&quot;</value>
            <value>&quot;MAN&quot;</value>
            <value>&quot;MERCEDES&quot;</value>
            <value>&quot;RENAULT&quot;</value>
            <value>&quot;SCANIA&quot;</value>
            <value>&quot;VOLVO&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Тягачи - Отечественные&quot;'>
            <value>&quot;KAMAZ&quot;</value>
            <value>&quot;MAZ&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Тягачи американцы&quot;'>
            <value>&quot;FREIGHTLINER&quot;</value>
            <value>&quot;INTERNATIONAL&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Make]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Mileage (bin)' datatype='integer' name='[Mileage (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[Mileage]' peg='0' size='100000' />
      </column>
      <column aggregation='Sum' caption='Пробег' datatype='integer' name='[Mileage]' role='dimension' type='ordinal' />
      <column caption='Кол-во объявлений' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Price (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='6' formula='[Price]' peg='0' size='1.07213e+06' />
      </column>
      <column aggregation='Avg' caption='Наша оценка' datatype='real' name='[Price 1]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Цена на объявлении' datatype='integer' name='[Price]' role='measure' type='quantitative' />
      <column datatype='string' name='[Result]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Year]' peg='0' size='5' />
        <aliases>
          <alias key='400' value='2000 - 2004' />
          <alias key='401' value='2005 - 2009' />
          <alias key='402' value='2010 - 2014' />
          <alias key='403' value='2015 - 2019' />
        </aliases>
      </column>
      <column caption='Год выпуска' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Выгода в % (bin)' datatype='integer' name='[Выгода в % (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[Calculation_410672030772486144]' peg='0' size='0.1' />
      </column>
      <column caption='Тип ТС' datatype='string' name='[﻿VehicleType]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Curtainsider&quot;' value='Штора' />
          <alias key='&quot;Platform&quot;' value='Бортовой' />
          <alias key='&quot;Refrigerator&quot;' value='Рефрижератор' />
          <alias key='&quot;Truck&quot;' value='Тягач' />
        </aliases>
      </column>
      <column-instance column='[2015 и моложе]' derivation='InOut' name='[io:2015 и моложе:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='2014 и старше' />
          <alias key='true' value='2015 и моложе' />
        </aliases>
      </column-instance>
      <column-instance column='[Calculation_1581607932506763264]' derivation='None' name='[none:Calculation_1581607932506763264:nk]' pivot='key' type='nominal' />
      <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
      <column-instance column='[Result]' derivation='None' name='[none:Result:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year (bin)]' derivation='None' name='[none:Year (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[﻿VehicleType]' derivation='None' name='[none:﻿VehicleType:nk]' pivot='key' type='nominal' />
      <group caption='2015 и моложе' name='[2015 и моложе]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Year:ok]' member='2015' />
          <groupfilter function='member' level='[none:Year:ok]' member='2016' />
          <groupfilter function='member' level='[none:Year:ok]' member='2017' />
          <groupfilter function='member' level='[none:Year:ok]' member='2018' />
          <groupfilter function='member' level='[none:Year:ok]' member='2019' />
          <groupfilter function='member' level='[none:Year:ok]' member='2020' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Year (bin),Тип ТС)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year (bin):ok]' />
          <groupfilter function='level-members' level='[none:﻿VehicleType:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Make,Year,﻿VehicleType)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Make:nk]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
          <groupfilter function='level-members' level='[none:﻿VehicleType:nk]' />
        </groupfilter>
      </group>
      <group caption='Выгода более 20%' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Выгода в % (bin)]' member='2' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='3' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='4' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='5' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='6' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='7' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='8' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='9' />
        </groupfilter>
      </group>
      <group caption='Выгода &gt; 10%' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Выгода в % (bin)]' member='1' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='2' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='3' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='4' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='5' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='6' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='7' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='8' />
          <groupfilter function='member' level='[Выгода в % (bin)]' member='9' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:﻿VehicleType:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Truck&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Platform&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curtainsider&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Refrigerator&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1581607932506763264:nk]&#10;[none:﻿VehicleType:nk]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;auto.ru&quot;</bucket>
                <bucket>&quot;Platform&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;drom.ru&quot;</bucket>
                <bucket>&quot;Truck&quot;</bucket>
              </multibucket>
            </map>
            <map to='#76b7b2'>
              <multibucket>
                <bucket>&quot;auto.ru&quot;</bucket>
                <bucket>&quot;Curtainsider&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;auto.ru&quot;</bucket>
                <bucket>&quot;Truck&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;auto.ru&quot;</bucket>
                <bucket>&quot;Refrigerator&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Result:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;ok&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;leasing&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;docs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;no_vat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;unclear&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;mix_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;repairs&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;no_vat_ever&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Year (bin):ok]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>400</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>404</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>403</bucket>
            </map>
            <map to='#e15759'>
              <bucket>402</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>401</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Make (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Тягачи - IVECO &amp; RENAULT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Тягачи - Европейцы&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Тягачи топы&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Тягачи американцы&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Тягачи - Отечественные&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Russia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='excel-direct.18wsbqd1gtc7wx192qned1eeh2g7' name='archive' table='[archive$]' type='table'>
                <columns gridOrigin='A1:R10001:no:A1:R10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='URL' ordinal='0' />
                  <column datatype='integer' name='Mileage' ordinal='1' />
                  <column datatype='integer' name='HP' ordinal='2' />
                  <column datatype='string' name='Make' ordinal='3' />
                  <column datatype='string' name='Gear' ordinal='4' />
                  <column datatype='string' name='Formula' ordinal='5' />
                  <column datatype='integer' name='Year' ordinal='6' />
                  <column datatype='integer' name='Price' ordinal='7' />
                  <column datatype='string' name='Model' ordinal='8' />
                  <column datatype='string' name='Supplier' ordinal='9' />
                  <column datatype='string' name='Location' ordinal='10' />
                  <column datatype='real' name='Price 1' ordinal='11' />
                  <column datatype='date' name='Date' ordinal='12' />
                  <column datatype='integer' name='CabSeats' ordinal='13' />
                  <column datatype='integer' name='CabBeds' ordinal='14' />
                  <column datatype='string' name='﻿VehicleType' ordinal='15' />
                  <column datatype='string' name='confidence' ordinal='16' />
                  <column datatype='string' name='Result' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 13'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Распределение пробега тягачей на auto.ru</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column caption='Доска' datatype='string' name='[Calculation_1581607932506763264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_EXTRACT([URL], &quot;(\w*\.ru)&quot;)' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column aggregation='None' caption='Mileage (bin)' datatype='integer' name='[Mileage (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[Mileage]' peg='0' size='100000' />
            </column>
            <column aggregation='Sum' caption='Пробег' datatype='integer' name='[Mileage]' role='dimension' type='ordinal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size='5' />
              <aliases>
                <alias key='400' value='2000 - 2004' />
                <alias key='401' value='2005 - 2009' />
                <alias key='402' value='2010 - 2014' />
                <alias key='403' value='2015 - 2019' />
              </aliases>
            </column>
            <column caption='Год выпуска' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Mileage]' derivation='Attribute' name='[attr:Mileage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Max' name='[max:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1581607932506763264]' derivation='None' name='[none:Calculation_1581607932506763264:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mileage (bin)]' derivation='None' name='[none:Mileage (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[URL]' derivation='None' name='[none:URL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (bin)]' derivation='None' name='[none:Year (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[﻿VehicleType]' derivation='None' name='[none:﻿VehicleType:nk]' pivot='key' type='nominal' />
            <column caption='Тип ТС' datatype='string' name='[﻿VehicleType]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Curtainsider&quot;' value='Штора' />
                <alias key='&quot;Platform&quot;' value='Бортовой' />
                <alias key='&quot;Refrigerator&quot;' value='Рефрижератор' />
                <alias key='&quot;Truck&quot;' value='Тягач' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='relative-date' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[max:Date:qk]' first-period='-4' include-future='true' include-null='false' last-period='0' period-type-v2='day' />
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]'>
            <groupfilter function='member' level='[none:Calculation_1581607932506763264:nk]' member='&quot;auto.ru&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Mileage (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Mileage (bin):ok]' />
              <groupfilter function='member' level='[none:Mileage (bin):ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Year (bin):ok]' />
              <groupfilter function='member' level='[none:Year (bin):ok]' member='404' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:ok]' direction='DESC' />
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]'>
            <groupfilter function='member' level='[none:﻿VehicleType:nk]' member='&quot;Truck&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[max:Date:qk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Mileage (bin):ok]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:ok]' value='30' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:ok]' value='-90' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:URL:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[attr:Mileage:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[attr:Mileage:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[attr:Mileage:qk]</rows>
        <cols>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{178F80CE-DF3E-419D-A7DA-1F916B978342}' />
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column caption='Доска' datatype='string' name='[Calculation_1581607932506763264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_EXTRACT([URL], &quot;(\w*\.ru)&quot;)' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Кол-во объявлений' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column caption='Год выпуска' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1581607932506763264]' derivation='None' name='[none:Calculation_1581607932506763264:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[﻿VehicleType]' derivation='None' name='[none:﻿VehicleType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Тип ТС' datatype='string' name='[﻿VehicleType]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Curtainsider&quot;' value='Штора' />
                <alias key='&quot;Platform&quot;' value='Бортовой' />
                <alias key='&quot;Refrigerator&quot;' value='Рефрижератор' />
                <alias key='&quot;Truck&quot;' value='Тягач' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[2015 и моложе]' />
          <filter class='relative-date' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]' first-period='0' include-future='true' include-null='false' last-period='0' period-type-v2='day' />
          <manual-sort column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Location:nk]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Москва&quot;</bucket>
              <bucket>&quot;Санкт-Петербург&quot;</bucket>
              <bucket>&quot;Набережные Челны&quot;</bucket>
              <bucket>&quot;Смоленск&quot;</bucket>
              <bucket>&quot;Екатеринбург&quot;</bucket>
              <bucket>&quot;Кимовск&quot;</bucket>
              <bucket>&quot;Домодедово&quot;</bucket>
              <bucket>&quot;Солнечногорск&quot;</bucket>
              <bucket>&quot;Тосно&quot;</bucket>
              <bucket>&quot;Новониколаевский&quot;</bucket>
              <bucket>&quot;Дубровки&quot;</bucket>
              <bucket>&quot;Ростов-на-Дону&quot;</bucket>
              <bucket>&quot;Нижний Новгород&quot;</bucket>
              <bucket>&quot;Краснодар&quot;</bucket>
              <bucket>&quot;Зеленоград&quot;</bucket>
              <bucket>&quot;Челябинск&quot;</bucket>
              <bucket>&quot;Казань&quot;</bucket>
              <bucket>&quot;Брянск&quot;</bucket>
              <bucket>&quot;Красноярск&quot;</bucket>
              <bucket>&quot;Чёрная Грязь&quot;</bucket>
              <bucket>&quot;Воронеж&quot;</bucket>
              <bucket>&quot;Шушары&quot;</bucket>
              <bucket>&quot;Новосибирск&quot;</bucket>
              <bucket>&quot;Красногорск&quot;</bucket>
              <bucket>&quot;Белгород&quot;</bucket>
              <bucket>&quot;Подольск&quot;</bucket>
              <bucket>&quot;Ярославль&quot;</bucket>
              <bucket>&quot;Уфа&quot;</bucket>
              <bucket>&quot;Омск&quot;</bucket>
              <bucket>&quot;Мытищи&quot;</bucket>
              <bucket>&quot;Авдон&quot;</bucket>
              <bucket>&quot;Самара&quot;</bucket>
              <bucket>&quot;Рязань&quot;</bucket>
              <bucket>&quot;Пермь&quot;</bucket>
              <bucket>&quot;Каменск-Шахтинский&quot;</bucket>
              <bucket>&quot;Ольша&quot;</bucket>
              <bucket>&quot;Новоалексеевское&quot;</bucket>
              <bucket>&quot;Волгоград&quot;</bucket>
              <bucket>&quot;Хоругвино&quot;</bucket>
              <bucket>&quot;Тольятти&quot;</bucket>
              <bucket>&quot;Ставрополь&quot;</bucket>
              <bucket>&quot;Петрозаводск&quot;</bucket>
              <bucket>&quot;Барнаул&quot;</bucket>
              <bucket>&quot;Астрахань&quot;</bucket>
              <bucket>&quot;Химки&quot;</bucket>
              <bucket>&quot;Усть-Кут&quot;</bucket>
              <bucket>&quot;Тюмень&quot;</bucket>
              <bucket>&quot;Пенза&quot;</bucket>
              <bucket>&quot;Люберцы&quot;</bucket>
              <bucket>&quot;Иркутск&quot;</bucket>
              <bucket>&quot;Всеволожск&quot;</bucket>
              <bucket>&quot;Хутор Маяковского&quot;</bucket>
              <bucket>&quot;Старый Оскол&quot;</bucket>
              <bucket>&quot;Обнинск&quot;</bucket>
              <bucket>&quot;Ногинск&quot;</bucket>
              <bucket>&quot;Липецк&quot;</bucket>
              <bucket>&quot;Калининград&quot;</bucket>
              <bucket>&quot;Гулькевичи&quot;</bucket>
              <bucket>&quot;Братск&quot;</bucket>
              <bucket>&quot;Балашиха&quot;</bucket>
              <bucket>&quot;Якутск&quot;</bucket>
              <bucket>&quot;Тула&quot;</bucket>
              <bucket>&quot;Санкт-Петербург и Ленинградская область&quot;</bucket>
              <bucket>&quot;Оренбург&quot;</bucket>
              <bucket>&quot;Нижневартовск&quot;</bucket>
              <bucket>&quot;Москва и Московская область&quot;</bucket>
              <bucket>&quot;Миасс&quot;</bucket>
              <bucket>&quot;Людиново&quot;</bucket>
              <bucket>&quot;Елино&quot;</bucket>
              <bucket>&quot;Голицыно&quot;</bucket>
              <bucket>&quot;Вязьма&quot;</bucket>
              <bucket>&quot;Владимир&quot;</bucket>
              <bucket>&quot;Ялуторовск&quot;</bucket>
              <bucket>&quot;Южно-Сахалинск&quot;</bucket>
              <bucket>&quot;Череповец&quot;</bucket>
              <bucket>&quot;Челябинская область&quot;</bucket>
              <bucket>&quot;Урай&quot;</bucket>
              <bucket>&quot;Ува&quot;</bucket>
              <bucket>&quot;Тербуны&quot;</bucket>
              <bucket>&quot;Тверь&quot;</bucket>
              <bucket>&quot;Тара&quot;</bucket>
              <bucket>&quot;Тамбов&quot;</bucket>
              <bucket>&quot;Тамань&quot;</bucket>
              <bucket>&quot;Таёжный&quot;</bucket>
              <bucket>&quot;Сухиничи&quot;</bucket>
              <bucket>&quot;Стерлитамак&quot;</bucket>
              <bucket>&quot;Солонцы&quot;</bucket>
              <bucket>&quot;Собинка&quot;</bucket>
              <bucket>&quot;Смоленская область&quot;</bucket>
              <bucket>&quot;Симферополь&quot;</bucket>
              <bucket>&quot;Серебряные Пруды&quot;</bucket>
              <bucket>&quot;Саяногорск&quot;</bucket>
              <bucket>&quot;Саратов&quot;</bucket>
              <bucket>&quot;Саввушка&quot;</bucket>
              <bucket>&quot;Рыбинск&quot;</bucket>
              <bucket>&quot;Рославль&quot;</bucket>
              <bucket>&quot;Ревда&quot;</bucket>
              <bucket>&quot;Посёлок совхоза имени Ленина&quot;</bucket>
              <bucket>&quot;Полысаево&quot;</bucket>
              <bucket>&quot;Петровское&quot;</bucket>
              <bucket>&quot;Парголово&quot;</bucket>
              <bucket>&quot;Павловск&quot;</bucket>
              <bucket>&quot;Орёл&quot;</bucket>
              <bucket>&quot;Новый Уренгой&quot;</bucket>
              <bucket>&quot;Новочеркасск&quot;</bucket>
              <bucket>&quot;Новороссийск&quot;</bucket>
              <bucket>&quot;Новокузнецк&quot;</bucket>
              <bucket>&quot;Новозыбков&quot;</bucket>
              <bucket>&quot;Новогуровский&quot;</bucket>
              <bucket>&quot;Мурманск&quot;</bucket>
              <bucket>&quot;Михнево&quot;</bucket>
              <bucket>&quot;Минусинск&quot;</bucket>
              <bucket>&quot;Лыткарино&quot;</bucket>
              <bucket>&quot;Лесосибирск&quot;</bucket>
              <bucket>&quot;Курск&quot;</bucket>
              <bucket>&quot;Кропоткин&quot;</bucket>
              <bucket>&quot;Красноярский край&quot;</bucket>
              <bucket>&quot;Краснощёково&quot;</bucket>
              <bucket>&quot;Красноусольский&quot;</bucket>
              <bucket>&quot;Котлас&quot;</bucket>
              <bucket>&quot;Копейск&quot;</bucket>
              <bucket>&quot;Кондрово&quot;</bucket>
              <bucket>&quot;Коломна&quot;</bucket>
              <bucket>&quot;Кодинск&quot;</bucket>
              <bucket>&quot;Княжье Озеро&quot;</bucket>
              <bucket>&quot;Киров&quot;</bucket>
              <bucket>&quot;Камышин&quot;</bucket>
              <bucket>&quot;Ильинское&quot;</bucket>
              <bucket>&quot;Ижевск&quot;</bucket>
              <bucket>&quot;Ивановская область&quot;</bucket>
              <bucket>&quot;Зеленодольск&quot;</bucket>
              <bucket>&quot;Заинск&quot;</bucket>
              <bucket>&quot;Еманжелинск&quot;</bucket>
              <bucket>&quot;Дзержинск&quot;</bucket>
              <bucket>&quot;Грозный&quot;</bucket>
              <bucket>&quot;Городец&quot;</bucket>
              <bucket>&quot;Воскресенск&quot;</bucket>
              <bucket>&quot;Вологда&quot;</bucket>
              <bucket>&quot;Волжский&quot;</bucket>
              <bucket>&quot;Владивосток&quot;</bucket>
              <bucket>&quot;Вихоревка&quot;</bucket>
              <bucket>&quot;Бутурлиновка&quot;</bucket>
              <bucket>&quot;Бугуруслан&quot;</bucket>
              <bucket>&quot;Бугульма&quot;</bucket>
              <bucket>&quot;Большая Елховка&quot;</bucket>
              <bucket>&quot;Благовещенск&quot;</bucket>
              <bucket>&quot;Берёзовский&quot;</bucket>
              <bucket>&quot;Белый Яр&quot;</bucket>
              <bucket>&quot;Батырево&quot;</bucket>
              <bucket>&quot;Балашов&quot;</bucket>
              <bucket>&quot;Архангельск&quot;</bucket>
              <bucket>&quot;Алексин&quot;</bucket>
              <bucket>&quot;Александров&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[2015 и моложе]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Location:nk]</rows>
        <cols>([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk] / [federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk])</cols>
      </table>
      <simple-id uuid='{F49AF08B-CDEA-4AC5-BC3F-E1AB6A9A1A5A}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Кол-во объявлений' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Result]' role='dimension' type='nominal' />
            <column caption='Год выпуска' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Result]' derivation='None' name='[none:Result:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='relative-date' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]' first-period='0' include-future='true' include-null='false' last-period='0' period-type-v2='day' />
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Result:nk]' />
              <groupfilter function='member' level='[none:Result:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]</rows>
        <cols>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{091F1E38-B06D-4B22-85F6-7CCBE00F185B}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Кол-во объявлений' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Result]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Result]' derivation='None' name='[none:Result:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='relative-date' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]' first-period='-2' include-future='true' include-null='false' last-period='0' period-type-v2='day' />
          <slices>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{A0019F1E-7931-4B9D-9719-62A0B2EB4344}' />
    </worksheet>
    <worksheet name='Динамика цен'>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column caption='Доска' datatype='string' name='[Calculation_1581607932506763264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_EXTRACT([URL], &quot;(\w*\.ru)&quot;)' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Цена на объявлении' datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Result]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size='5' />
              <aliases>
                <alias key='400' value='2000 - 2004' />
                <alias key='401' value='2005 - 2009' />
                <alias key='402' value='2010 - 2014' />
                <alias key='403' value='2015 - 2019' />
              </aliases>
            </column>
            <column caption='Год выпуска' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[URL]' derivation='CountD' name='[ctd:URL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Min' name='[min:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1581607932506763264]' derivation='None' name='[none:Calculation_1581607932506763264:nk]' pivot='key' type='nominal' />
            <column-instance column='[Result]' derivation='None' name='[none:Result:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (bin)]' derivation='None' name='[none:Year (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[﻿VehicleType]' derivation='None' name='[none:﻿VehicleType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Avg' name='[pcdf:avg:Price:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
            <column caption='Тип ТС' datatype='string' name='[﻿VehicleType]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Curtainsider&quot;' value='Штора' />
                <alias key='&quot;Platform&quot;' value='Бортовой' />
                <alias key='&quot;Refrigerator&quot;' value='Рефрижератор' />
                <alias key='&quot;Truck&quot;' value='Тягач' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[min:Date:qk]' included-values='in-range'>
            <min>#2020-04-20#</min>
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1581607932506763264:nk]' />
              <groupfilter function='empty-level' member='[none:Calculation_1581607932506763264:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Result:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Result:nk]' member='&quot;leasing&quot;' />
                <groupfilter function='member' level='[none:Result:nk]' member='&quot;mix_other&quot;' />
                <groupfilter function='member' level='[none:Result:nk]' member='&quot;repairs&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Year (bin):ok]' />
              <groupfilter function='member' level='[none:Year (bin):ok]' member='404' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:﻿VehicleType:nk]' />
              <groupfilter function='member' level='[none:﻿VehicleType:nk]' member='&quot;Platform&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Truck&quot;</bucket>
              <bucket>&quot;Refrigerator&quot;</bucket>
              <bucket>&quot;Curtainsider&quot;</bucket>
              <bucket>&quot;Platform&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[min:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[wk:Date:ok]' value='-90' />
            <format attr='text-orientation' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[twk:Date:qk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]' />
              <size column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[ctd:URL:qk]' />
              <text column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Price:qk]</rows>
        <cols>(([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk] / ([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk] / [federated.1dmeu660mt1cht1eyvfzm1v70ht0].[yr:Date:ok])) * [federated.1dmeu660mt1cht1eyvfzm1v70ht0].[twk:Date:qk])</cols>
        <show-full-range>
          <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Year (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{92069284-3609-4170-8CE9-E22C13E0D146}' />
    </worksheet>
    <worksheet name='Объявлений в базе'>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column caption='Доска' datatype='string' name='[Calculation_1581607932506763264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_EXTRACT([URL], &quot;(\w*\.ru)&quot;)' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Кол-во объявлений' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size='5' />
              <aliases>
                <alias key='400' value='2000 - 2004' />
                <alias key='401' value='2005 - 2009' />
                <alias key='402' value='2010 - 2014' />
                <alias key='403' value='2015 - 2019' />
              </aliases>
            </column>
            <column caption='Год выпуска' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1581607932506763264]' derivation='None' name='[none:Calculation_1581607932506763264:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (bin)]' derivation='None' name='[none:Year (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[﻿VehicleType]' derivation='None' name='[none:﻿VehicleType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
            <column caption='Тип ТС' datatype='string' name='[﻿VehicleType]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Curtainsider&quot;' value='Штора' />
                <alias key='&quot;Platform&quot;' value='Бортовой' />
                <alias key='&quot;Refrigerator&quot;' value='Рефрижератор' />
                <alias key='&quot;Truck&quot;' value='Тягач' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]'>
            <groupfilter function='member' level='[none:Calculation_1581607932506763264:nk]' member='&quot;auto.ru&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]&#10;[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' value='210' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]' />
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='129' />
                <format attr='maxheight' value='129' />
                <format attr='minwidth' value='300' />
                <format attr='maxwidth' value='300' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok] * [federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk])</rows>
        <cols>([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[yr:Date:ok] / ([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[mn:Date:ok] / [federated.1dmeu660mt1cht1eyvfzm1v70ht0].[dy:Date:ok]))</cols>
      </table>
      <simple-id uuid='{76F5B8A9-6306-475A-96C8-957F39648D2D}' />
    </worksheet>
    <worksheet name='Отклонения модели'>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column caption='Доска' datatype='string' name='[Calculation_1581607932506763264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_EXTRACT([URL], &quot;(\w*\.ru)&quot;)' />
            </column>
            <column caption='Выгода в %' datatype='real' name='[Calculation_410672030772486144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price 1]/[Price]-1' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Наша оценка' datatype='real' name='[Price 1]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Цена на объявлении' datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Result]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column caption='Год выпуска' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_410672030772486144]' derivation='Avg' name='[avg:Calculation_410672030772486144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price 1]' derivation='Avg' name='[avg:Price 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015 и моложе]' derivation='InOut' name='[io:2015 и моложе:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='2014 и старше' />
                <alias key='true' value='2015 и моложе' />
              </aliases>
            </column-instance>
            <column-instance column='[Calculation_1581607932506763264]' derivation='None' name='[none:Calculation_1581607932506763264:nk]' pivot='key' type='nominal' />
            <column-instance column='[Result]' derivation='None' name='[none:Result:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Price 1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Calculation_410672030772486144:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Calculation_1218786686905237504:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Price:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Price 1:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Result:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Result:nk]' member='&quot;docs&quot;' />
                <groupfilter function='member' level='[none:Result:nk]' member='&quot;leasing&quot;' />
                <groupfilter function='member' level='[none:Result:nk]' member='&quot;mix_other&quot;' />
                <groupfilter function='member' level='[none:Result:nk]' member='&quot;repairs&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[:Measure Names]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Calculation_410672030772486144:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[tdy:Date:ok]</rows>
        <cols>([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk] / ([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[io:2015 и моложе:nk] / [federated.1dmeu660mt1cht1eyvfzm1v70ht0].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{3C7B78EA-965D-44E9-976C-7DD78D65AAC2}' />
    </worksheet>
    <worksheet name='Отклонения средней оценки от средней цены'>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column caption='Доска' datatype='string' name='[Calculation_1581607932506763264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_EXTRACT([URL], &quot;(\w*\.ru)&quot;)' />
            </column>
            <column caption='Выгода в %' datatype='real' name='[Calculation_410672030772486144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price 1]/[Price]-1' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Наша оценка' datatype='real' name='[Price 1]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Цена на объявлении' datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Result]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size='5' />
              <aliases>
                <alias key='400' value='2000 - 2004' />
                <alias key='401' value='2005 - 2009' />
                <alias key='402' value='2010 - 2014' />
                <alias key='403' value='2015 - 2019' />
              </aliases>
            </column>
            <column caption='Год выпуска' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_410672030772486144]' derivation='Avg' name='[avg:Calculation_410672030772486144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1581607932506763264]' derivation='None' name='[none:Calculation_1581607932506763264:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Result]' derivation='None' name='[none:Result:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (bin)]' derivation='None' name='[none:Year (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]'>
            <groupfilter function='member' level='[none:Calculation_1581607932506763264:nk]' member='&quot;auto.ru&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]' first-period='-6' include-future='true' include-null='false' last-period='0' period-type-v2='day' />
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Result:nk]' />
              <groupfilter function='member' level='[none:Result:nk]' member='&quot;repairs&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[mn:Date:ok]' value='545' />
            <format attr='height' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[tdy:Date:qk]' value='39' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Calculation_410672030772486144:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[mn:Date:ok]' value='0' />
            <format attr='text-format' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Calculation_410672030772486144:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Calculation_410672030772486144:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='111' />
                <format attr='maxheight' value='111' />
                <format attr='minwidth' value='559' />
                <format attr='maxwidth' value='559' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok] * [federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Calculation_410672030772486144:qk])</rows>
        <cols>([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[mn:Date:ok] * [federated.1dmeu660mt1cht1eyvfzm1v70ht0].[tdy:Date:qk])</cols>
      </table>
      <simple-id uuid='{BBB5F15C-2FB7-4E56-A77B-31AA0A5959A1}' />
    </worksheet>
    <worksheet name='Распределение выгоды'>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column caption='Доска' datatype='string' name='[Calculation_1581607932506763264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_EXTRACT([URL], &quot;(\w*\.ru)&quot;)' />
            </column>
            <column caption='Выгода в %' datatype='real' name='[Calculation_410672030772486144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price 1]/[Price]-1' />
            </column>
            <column caption='Кол-во объявлений' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Avg' caption='Наша оценка' datatype='real' name='[Price 1]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Цена на объявлении' datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Result]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size='5' />
              <aliases>
                <alias key='400' value='2000 - 2004' />
                <alias key='401' value='2005 - 2009' />
                <alias key='402' value='2010 - 2014' />
                <alias key='403' value='2015 - 2019' />
              </aliases>
            </column>
            <column caption='Год выпуска' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1581607932506763264]' derivation='None' name='[none:Calculation_1581607932506763264:nk]' pivot='key' type='nominal' />
            <column-instance column='[Result]' derivation='None' name='[none:Result:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (bin)]' derivation='None' name='[none:Year (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Выгода в % (bin)]' derivation='None' name='[none:Выгода в % (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[﻿VehicleType]' derivation='None' name='[none:﻿VehicleType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='None' caption='Выгода в % (bin)' datatype='integer' name='[Выгода в % (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-1' formula='[Calculation_410672030772486144]' peg='0' size='0.1' />
            </column>
            <column caption='Тип ТС' datatype='string' name='[﻿VehicleType]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Curtainsider&quot;' value='Штора' />
                <alias key='&quot;Platform&quot;' value='Бортовой' />
                <alias key='&quot;Refrigerator&quot;' value='Рефрижератор' />
                <alias key='&quot;Truck&quot;' value='Тягач' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]'>
            <groupfilter function='member' level='[none:Calculation_1581607932506763264:nk]' member='&quot;auto.ru&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Result:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Result:nk]' member='&quot;leasing&quot;' />
                <groupfilter function='member' level='[none:Result:nk]' member='&quot;mix_other&quot;' />
                <groupfilter function='member' level='[none:Result:nk]' member='&quot;repairs&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]'>
            <groupfilter function='member' level='[none:Year (bin):ok]' member='403' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Выгода в % (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='-10' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='-9' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='-8' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='-7' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='-6' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='-5' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='-4' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='-3' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='-2' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='-1' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='0' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='1' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='2' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='5' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='6' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='7' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='8' />
              <groupfilter function='member' level='[none:Выгода в % (bin):ok]' member='9' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]'>
            <groupfilter function='member' level='[none:﻿VehicleType:nk]' member='&quot;Truck&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Выгода в % (bin):ok]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcto:sum:Number of Records:qk]' scope='rows' value='% of кол-ва объявлений' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Выгода в % (bin):ok]' value='73' />
            <format attr='text-format' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcto:sum:Number of Records:qk]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Выгода в % (bin):ok]' value='p0%' />
            <format attr='text-format' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcto:sum:Number of Records:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[io:Set 2:nk]' />
              <text column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcto:sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='976' />
                <format attr='maxwidth' value='976' />
                <format attr='minheight' value='602' />
                <format attr='maxheight' value='602' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcto:sum:Number of Records:qk]</rows>
        <cols>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Выгода в % (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Выгода в % (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{886E4204-F41D-4E89-8080-84CB3CACB21A}' />
    </worksheet>
    <worksheet name='Распределение стока по годам'>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column caption='Доска' datatype='string' name='[Calculation_1581607932506763264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_EXTRACT([URL], &quot;(\w*\.ru)&quot;)' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Кол-во объявлений' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size='5' />
              <aliases>
                <alias key='400' value='2000 - 2004' />
                <alias key='401' value='2005 - 2009' />
                <alias key='402' value='2010 - 2014' />
                <alias key='403' value='2015 - 2019' />
              </aliases>
            </column>
            <column caption='Год выпуска' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1581607932506763264]' derivation='None' name='[none:Calculation_1581607932506763264:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (bin)]' derivation='None' name='[none:Year (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[﻿VehicleType]' derivation='None' name='[none:﻿VehicleType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Тип ТС' datatype='string' name='[﻿VehicleType]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Curtainsider&quot;' value='Штора' />
                <alias key='&quot;Platform&quot;' value='Бортовой' />
                <alias key='&quot;Refrigerator&quot;' value='Рефрижератор' />
                <alias key='&quot;Truck&quot;' value='Тягач' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Exclusions (Year (bin),Тип ТС)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Year (bin):ok]' />
                <groupfilter function='level-members' level='[none:﻿VehicleType:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Year (bin):ok]' member='404' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:﻿VehicleType:nk]' member='&quot;Refrigerator&quot;' />
                  <groupfilter function='member' level='[none:﻿VehicleType:nk]' member='&quot;Truck&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]'>
            <groupfilter function='member' level='[none:Calculation_1581607932506763264:nk]' member='&quot;auto.ru&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='relative-date' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]' first-period='0' include-future='true' include-null='false' last-period='0' period-type-v2='day' />
          <manual-sort column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Truck&quot;</bucket>
              <bucket>&quot;Refrigerator&quot;</bucket>
              <bucket>&quot;Curtainsider&quot;</bucket>
              <bucket>&quot;Platform&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Exclusions (Year (bin),Тип ТС)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]' value='121' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='353' />
                <format attr='maxheight' value='353' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]</rows>
        <cols>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]</cols>
      </table>
      <simple-id uuid='{7C09C62D-3E10-4B9A-94AA-5CF63787A725}' />
    </worksheet>
    <worksheet name='Сводка общая'>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column caption='Доска' datatype='string' name='[Calculation_1581607932506763264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_EXTRACT([URL], &quot;(\w*\.ru)&quot;)' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Кол-во объявлений' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Avg' caption='Цена на объявлении' datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1581607932506763264]' derivation='None' name='[none:Calculation_1581607932506763264:nk]' pivot='key' type='nominal' />
            <column-instance column='[﻿VehicleType]' derivation='None' name='[none:﻿VehicleType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Avg' name='[pcdf:avg:Price:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
            <column caption='Тип ТС' datatype='string' name='[﻿VehicleType]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Curtainsider&quot;' value='Штора' />
                <alias key='&quot;Platform&quot;' value='Бортовой' />
                <alias key='&quot;Refrigerator&quot;' value='Рефрижератор' />
                <alias key='&quot;Truck&quot;' value='Тягач' />
              </aliases>
            </column>
          </datasource-dependencies>
          <manual-sort column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Truck&quot;</bucket>
              <bucket>&quot;Refrigerator&quot;</bucket>
              <bucket>&quot;Curtainsider&quot;</bucket>
              <bucket>&quot;Platform&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Price:qk]' scope='rows' value='Средняя цена' />
            <format attr='title' class='0' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk:2]' scope='rows' value='Изменение цены' />
            <format attr='title' class='0' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]' scope='rows' value='Объвлений в базе' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk:2]' value='p0%' />
            <format attr='text-orientation' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[tdy:Date:ok]' value='-90' />
            <format attr='text-format' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[tdy:Date:ok]' value='*dd.mm.yy' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]' value='Кол-во объявлений'>
              <formatted-text>
                <run>Кол-во объявлений</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' />
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' />
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]' />
              <size column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' />
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' />
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]' />
              <size column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Price:qk] + ([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk:2] + [federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]))</rows>
        <cols>([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[yr:Date:ok] / ([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[mn:Date:ok] / [federated.1dmeu660mt1cht1eyvfzm1v70ht0].[tdy:Date:ok]))</cols>
      </table>
      <simple-id uuid='{4F3401DC-C658-4E78-B0E6-9DF512340F9C}' />
    </worksheet>
    <worksheet name='Сводка от 2015'>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Кол-во объявлений' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Avg' caption='Цена на объявлении' datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Year]' peg='0' size='5' />
              <aliases>
                <alias key='400' value='2000 - 2004' />
                <alias key='401' value='2005 - 2009' />
                <alias key='402' value='2010 - 2014' />
                <alias key='403' value='2015 - 2019' />
              </aliases>
            </column>
            <column caption='Год выпуска' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Min' name='[min:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year (bin)]' derivation='None' name='[none:Year (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[﻿VehicleType]' derivation='None' name='[none:﻿VehicleType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Avg' name='[pcdf:avg:Price:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
            <column caption='Тип ТС' datatype='string' name='[﻿VehicleType]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Curtainsider&quot;' value='Штора' />
                <alias key='&quot;Platform&quot;' value='Бортовой' />
                <alias key='&quot;Refrigerator&quot;' value='Рефрижератор' />
                <alias key='&quot;Truck&quot;' value='Тягач' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[min:Date:qk]' included-values='in-range'>
            <min>#2020-04-05#</min>
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]'>
            <groupfilter function='member' level='[none:Year (bin):ok]' member='403' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Truck&quot;</bucket>
              <bucket>&quot;Refrigerator&quot;</bucket>
              <bucket>&quot;Curtainsider&quot;</bucket>
              <bucket>&quot;Platform&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[min:Date:qk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Price:qk]' scope='rows' value='Средняя цена' />
            <format attr='title' class='0' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk:2]' scope='rows' value='Изменение цены' />
            <format attr='title' class='0' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]' scope='rows' value='Объвлений в базе' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk:2]' value='p0%' />
            <format attr='text-orientation' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[tdy:Date:ok]' value='-90' />
            <format attr='text-format' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[tdy:Date:ok]' value='*dd.mm.yy' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]' value='Кол-во объявлений'>
              <formatted-text>
                <run>Кол-во объявлений</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' />
              <size column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' />
              <size column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Price:qk] + ([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk:2] + [federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]))</rows>
        <cols>([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[yr:Date:ok] / ([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[mn:Date:ok] / [federated.1dmeu660mt1cht1eyvfzm1v70ht0].[tdy:Date:ok]))</cols>
      </table>
      <simple-id uuid='{61F60D8E-E91F-40FF-AA5C-C3079BE74D07}' />
    </worksheet>
    <worksheet name='Снижение цены'>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Formula]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Make]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Тягачи - Европейцы&quot;'>
                  <value>&quot;DAF&quot;</value>
                  <value>&quot;IVECO&quot;</value>
                  <value>&quot;MAN&quot;</value>
                  <value>&quot;MERCEDES&quot;</value>
                  <value>&quot;RENAULT&quot;</value>
                  <value>&quot;SCANIA&quot;</value>
                  <value>&quot;VOLVO&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Тягачи - Отечественные&quot;'>
                  <value>&quot;KAMAZ&quot;</value>
                  <value>&quot;MAZ&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Тягачи американцы&quot;'>
                  <value>&quot;FREIGHTLINER&quot;</value>
                  <value>&quot;INTERNATIONAL&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column caption='Кол-во объявлений' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Avg' caption='Цена на объявлении' datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Result]' role='dimension' type='nominal' />
            <column caption='Год выпуска' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Date]' derivation='Max' name='[max:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Formula]' derivation='None' name='[none:Formula:nk]' pivot='key' type='nominal' />
            <column-instance column='[Result]' derivation='None' name='[none:Result:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[﻿VehicleType]' derivation='None' name='[none:﻿VehicleType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Avg' name='[pcdf:avg:Price:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Price]' derivation='Avg' name='[pcdf:avg:Price:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Тип ТС' datatype='string' name='[﻿VehicleType]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Curtainsider&quot;' value='Штора' />
                <alias key='&quot;Platform&quot;' value='Бортовой' />
                <alias key='&quot;Refrigerator&quot;' value='Рефрижератор' />
                <alias key='&quot;Truck&quot;' value='Тягач' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='relative-date' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[max:Date:qk]' first-period='0' include-future='true' include-null='false' last-period='0' period-type-v2='day' />
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Formula:nk]'>
            <groupfilter function='member' level='[none:Formula:nk]' member='&quot;6x4&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Result:nk]' member='%null%' />
              <groupfilter function='member' level='[none:Result:nk]' member='&quot;ok&quot;' />
              <groupfilter function='member' level='[none:Result:nk]' member='&quot;unclear&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:ok]' direction='ASC'>
            <dictionary>
              <bucket>2019</bucket>
              <bucket>2018</bucket>
              <bucket>2017</bucket>
              <bucket>2016</bucket>
              <bucket>2015</bucket>
              <bucket>2014</bucket>
              <bucket>2013</bucket>
              <bucket>2012</bucket>
              <bucket>2011</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:qk]' included-values='in-range'>
            <min>2011</min>
            <max>2018</max>
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]'>
            <groupfilter function='member' level='[none:﻿VehicleType:nk]' member='&quot;Truck&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[max:Date:qk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:qk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Formula:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:ok]' value='31' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:ok]' value='18' />
            <format attr='text-format' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk:2]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Make (group)]' />
              <size column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]' />
              <text column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='power' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='324' />
                <format attr='maxwidth' value='324' />
                <format attr='minheight' value='352' />
                <format attr='maxheight' value='352' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='324' />
                <format attr='maxwidth' value='324' />
                <format attr='minheight' value='352' />
                <format attr='maxheight' value='352' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk:2]</rows>
        <cols>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{EB1187DA-9287-4971-8037-CD3374A83F27}' />
    </worksheet>
    <worksheet name='Снижение цены - таблица'>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column caption='Доска' datatype='string' name='[Calculation_1581607932506763264]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_EXTRACT([URL], &quot;(\w*\.ru)&quot;)' />
            </column>
            <column datatype='string' name='[Make (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Make]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Тягачи - Европейцы&quot;'>
                  <value>&quot;DAF&quot;</value>
                  <value>&quot;IVECO&quot;</value>
                  <value>&quot;MAN&quot;</value>
                  <value>&quot;MERCEDES&quot;</value>
                  <value>&quot;RENAULT&quot;</value>
                  <value>&quot;SCANIA&quot;</value>
                  <value>&quot;VOLVO&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Тягачи - Отечественные&quot;'>
                  <value>&quot;KAMAZ&quot;</value>
                  <value>&quot;MAZ&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Тягачи американцы&quot;'>
                  <value>&quot;FREIGHTLINER&quot;</value>
                  <value>&quot;INTERNATIONAL&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Цена на объявлении' datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Result]' role='dimension' type='nominal' />
            <column datatype='string' name='[URL]' role='dimension' type='nominal' />
            <column caption='Год выпуска' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1581607932506763264]' derivation='None' name='[none:Calculation_1581607932506763264:nk]' pivot='key' type='nominal' />
            <column-instance column='[Result]' derivation='None' name='[none:Result:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[﻿VehicleType]' derivation='None' name='[none:﻿VehicleType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price]' derivation='Avg' name='[pcdf:avg:Price:qk:3]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Тип ТС' datatype='string' name='[﻿VehicleType]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Curtainsider&quot;' value='Штора' />
                <alias key='&quot;Platform&quot;' value='Бортовой' />
                <alias key='&quot;Refrigerator&quot;' value='Рефрижератор' />
                <alias key='&quot;Truck&quot;' value='Тягач' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Make (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Make (group)]' />
              <groupfilter function='member' level='[Make (group)]' member='&quot;Тягачи американцы&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]'>
            <groupfilter function='member' level='[none:Calculation_1581607932506763264:nk]' member='&quot;auto.ru&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Result:nk]' member='%null%' />
              <groupfilter function='member' level='[none:Result:nk]' member='&quot;ok&quot;' />
              <groupfilter function='member' level='[none:Result:nk]' member='&quot;unclear&quot;' />
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:ok]' direction='DESC' />
          <manual-sort column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Truck&quot;</bucket>
              <bucket>&quot;Refrigerator&quot;</bucket>
              <bucket>&quot;Curtainsider&quot;</bucket>
              <bucket>&quot;Platform&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Make (group)]' value='170' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[pcdf:avg:Price:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:ok]</rows>
        <cols>([federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk] / [federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Make (group)])</cols>
      </table>
      <simple-id uuid='{476E4844-91E7-44A8-95F5-AC9303D3058D}' />
    </worksheet>
    <worksheet name='Средние цены'>
      <table>
        <view>
          <datasources>
            <datasource caption='archive' name='federated.1dmeu660mt1cht1eyvfzm1v70ht0' />
          </datasources>
          <datasource-dependencies datasource='federated.1dmeu660mt1cht1eyvfzm1v70ht0'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Formula]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Make]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Тягачи - Европейцы&quot;'>
                  <value>&quot;DAF&quot;</value>
                  <value>&quot;IVECO&quot;</value>
                  <value>&quot;MAN&quot;</value>
                  <value>&quot;MERCEDES&quot;</value>
                  <value>&quot;RENAULT&quot;</value>
                  <value>&quot;SCANIA&quot;</value>
                  <value>&quot;VOLVO&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Тягачи - Отечественные&quot;'>
                  <value>&quot;KAMAZ&quot;</value>
                  <value>&quot;MAZ&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Тягачи американцы&quot;'>
                  <value>&quot;FREIGHTLINER&quot;</value>
                  <value>&quot;INTERNATIONAL&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Цена на объявлении' datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column caption='Год выпуска' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Max' name='[max:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Formula]' derivation='None' name='[none:Formula:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[﻿VehicleType]' derivation='None' name='[none:﻿VehicleType:nk]' pivot='key' type='nominal' />
            <column caption='Тип ТС' datatype='string' name='[﻿VehicleType]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Curtainsider&quot;' value='Штора' />
                <alias key='&quot;Platform&quot;' value='Бортовой' />
                <alias key='&quot;Refrigerator&quot;' value='Рефрижератор' />
                <alias key='&quot;Truck&quot;' value='Тягач' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Make (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Make (group)]' />
              <groupfilter function='member' level='[Make (group)]' member='&quot;Тягачи американцы&quot;' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[max:Date:qk]' first-period='0' include-future='true' include-null='false' last-period='0' period-type-v2='day' />
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Formula:nk]'>
            <groupfilter function='member' level='[none:Formula:nk]' member='&quot;4x2&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:qk]' included-values='in-range'>
            <min>2010</min>
            <max>2018</max>
          </filter>
          <filter class='categorical' column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]'>
            <groupfilter function='member' level='[none:﻿VehicleType:nk]' member='&quot;Truck&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[max:Date:qk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Make (group)]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:qk]</column>
            <column>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Formula:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Make (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Price:qk]</rows>
        <cols>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{8BCDE8F0-423A-41CE-A0F2-B937866ED58C}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Сводка общая'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]&#10;[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[:Measure Names]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:qk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58570F4D-23CA-453C-A19A-70983701BB9B}' />
    </window>
    <window class='worksheet' name='Сводка от 2015'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[:Measure Names]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:qk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1500CA50-B75A-4637-B61C-3EA8514D5035}' />
    </window>
    <window class='worksheet' name='Отклонения модели'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[:Measure Names]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[io:2015 и моложе:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AEF90CF-F5D8-4649-A5C7-C107DA2A890B}' />
    </window>
    <window class='worksheet' name='Динамика цен'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]' type='color' />
            <card pane-specification-id='0' param='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[ctd:URL:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:URL:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{65BC066C-8621-4F0E-8EC0-EFA71949E453}' />
    </window>
    <window class='worksheet' name='Распределение выгоды'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[io:Set 2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[io:Set 1:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[io:Set 2:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:qk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Выгода в % (bin):ok]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{068821A0-C6CD-4A7B-9C64-B4558F1E6650}' />
    </window>
    <window class='worksheet' name='Объявлений в базе'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]&#10;[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' type='color' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D34EF360-E023-4A51-927C-01103EB9E01F}' />
    </window>
    <window class='worksheet' name='Отклонения средней оценки от средней цены'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[avg:Calculation_410672030772486144:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:qk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[tdy:Date:ok]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2E5BD79-4046-4EF9-AA03-7AD26DAA50F7}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FC40FB8-5BA1-408E-B16C-C078407CFF01}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6C6CD39-F1B6-423B-9921-FAE1381702EE}' />
    </window>
    <window class='worksheet' name='Распределение стока по годам'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F7076D6D-A4D5-4F62-85DD-9C3F6F2D6E59}' />
    </window>
    <window class='worksheet' name='Снижение цены'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='2' param='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Make (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Make (group)]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Formula:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Make:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:qk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B70A2739-0044-489E-AA73-64C107EB4253}' />
    </window>
    <window class='worksheet' name='Снижение цены - таблица'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[:Measure Names]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Make (group)]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Date:qk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Result:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:qk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17EEA7A6-DD09-4EFC-8F9D-D3C964E1AF82}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Mileage (bin):ok]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Mileage:ok]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:URL:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year (bin):ok]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:qk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86F24CEB-106D-4DCF-B90A-371D1301B5E5}' />
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[2015 и моложе]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Calculation_1581607932506763264:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Location:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C99BDB2-7BDE-4735-A5CB-7FA24B791180}' />
    </window>
    <window class='worksheet' maximized='true' name='Средние цены'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Make (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[Make (group)]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Formula:nk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:Year:qk]</field>
            <field>[federated.1dmeu660mt1cht1eyvfzm1v70ht0].[none:﻿VehicleType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA12F2D9-2F10-4A50-877B-1CC4481CBE6D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='192'>
      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
      KgQx/wG6Q6my0SqWtQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Динамика цен' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Объявлений в базе' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29aZQk13WY+UVE7vtWVVmVte+9rwAaSwNogAY53EVRErXQEimNNLRMj3Qk
      j+QzHo+tdWZ4PGPLPjJlmza1UZZpUSK1ESRIAiB2oNF7d+37nlm575kRMT+qOjOjqrobVeyu
      yq6O7xwc9Lt148W7mXEzIt67715BVVUVHZ0HFHGvB6Cjs5fclw6QzWZRFGWvh6GzD7gvHUCW
      5b0egs4+4b50AB2du4XuADoPNLoD6DzQ6A7wHiiXy3s9BJ17hO4A74FMJrPXQ9C5R+xbB1id
      HeHqxALFdIyXXntnr4ezr1DLGV58+S32wwqqYa8HcK9QVYlCPsNKOIvdbmNxepRL18c42NfN
      QqaE1SCSX15ACLRx6ugA0l4P+D5ifmqOtjY/8XSGoUsXKSsS/gYHarmEyeZnfuIGisXHsVYn
      Q0sRAsEuCqkEff19WM3GvR6+hn17BwDwWCSWswo2o0A0kaY54CSTK9PS2oZBNNDV1UV3b6d+
      8W8HVSUci5JLJViYX6axpZ32lkZEg5m2UAvlQhaz3U9fVyvRtMyxg71IIqAqDI+O7fXoNyHc
      j7FAqVQKu92OKN7af0uFPIJBIpsrYxBVlFKOdF7GmE8wUzBwoKsdSS6B0YRRuv3vQCKRwO12
      320z7k9UhWyugM1mJZvNIIoGBFSmZyYwW9y0traQWF1GliwIiozP46QoqyzPz+FvbsNhNe21
      BRoqDpBOp++bFdZcLofFYkEQhG0fq6oKCCLbOTKbzWKz2bZ9rgcJRVFu+4NUr1TeARwOx16O
      Y1uIonjHO8DdRr8D7E/uP5fV0bmL6A6g80CjO4DOA01drAMoikImlSRXKGK2OXA79BdOnd2h
      LhxgcugKV4dGWI7nePrZ9+kOoLNr1MUjkMvXQEuwAbtU4t0ro3s9HJ0HiLpwgIZgC/lMGrun
      gf6u1nWpyuToEJevDZGMrpAtyszOLezpOHX2H3XxCATQ09dH7PIQak2IVXt3H0PXr5NKrjI1
      MsvhY0dRFAVFUZBlmd1axL55Pp39R904QCwaRRQlzUU9PnyD1u4+SvFZ3E4b2Vwel8WBKIqV
      /3YDQRDuy1VOnTuz6w5QzMZ54Tsv42np5tFThyshCSaTkcWlMF0DR9YESplSWWFuZob2UAN9
      TR4S0TAITmDtotxJKMRO2M1z6ewuu+4AU6PXOfTIOWavvUVRPox5PRQzm05RKhVJZ/NrAtHI
      oaNHNcc2Njbu8mh19jubHECRy5RlFaPRQKlUwmA0giIjK2AwSBWZuMNfxI6eAb75rW9i8rZj
      qolDDraEeMzdTtB3/8Qk6dz/bHKA+dlpIpEY/oCXaCqPyWxDycUoytDS6GMpnsVstnGgr3NH
      J5wZH2IpkSdkClOUqdwBhsdmwGglsqwSbGr6QWzS0dEwu5IkVyhV2o0eOxazgZnlxGYHCPh9
      xDNFyjmZgcOHmB25ChYfIafExGKUQyePMTMygioXGJ2Yo6enhzuE02uw2R2YRIVcWTsH293R
      zEuvX+Chp577QWzV0dmE9JV/jTR8pdIWfux/RugeQPrdX93oAApvv32eQLANp8fCtYuXsDvc
      yJlVxpLQHmrg6sVL2J0eBMlMf1/PtgcT6j3G6ZzKkSPHNfJrN0bp7etDVPQMDDp3Fyllwhiz
      VNpiQUKQBYwxy0YHEDj79DOorM18BJpaQRCAjopGY/CmbGeE58aYmV0gmirxxJmHKnePjrYW
      ro3OkMNCb0fLjvvX0dkOmxxAEIXqbqmtLvQfcDpwdWkGVbISDDYj1nSVzWRR1N1b3NLRgS1C
      IXLpBPOLK6iqwtLCPMWyQj6TZGU1DkAxlyadK+74hP3Hz/LI8UFWl2Yo11zrS0sLrIQTxKPR
      Hfeto7NdNr0EpzI5islVxhKrGN1+RkZGoVzEYhKx2KzMj1xGtnVzuC+4oxOuLk3y0ptXMVhc
      mjvAkeOnaYwm8TW13vpgHZ27zCYHMIoKedGKTSnTGGykmAyD5MTvlBi7fol8sUw+E4YdOkAx
      n8Vsc1EqFlBUkNadYHh4lMmJCc5+5EcruisLUxQlF16LgmjzEQsv09LSvDNL9wGriSyz4WSl
      bbcY6Wv1c2M6QqFUnTzoCnpQczFGL71ekZmtDo4+/hxD518mFYtU5B2DJ7C7PFx/63sVmSgZ
      OHXuo9sa23w4STiRrbT9LhutDU4ujS9r9A60B4hn8iyupisyt91MV7OXqxMrlGvqPvSGfPc8
      i8SmWaCRkXEcngbcQQ/XL1zEE2hCSYeZWFY5fOwURjnJ+OLOZmpysSXmM2aefuwk5y9e1WRm
      6GoPYvE2komvQvvaOoDFaiceTWAplpgYm6N38CCqqqKqKoqi7Nr7gqqqdREMZ770Mg1/+vuV
      tqnnAPKv/A6+L/1zysvVSFnjL/w6qmKi6T9/tSIzNDUhn3kW79+8iO3GjYrc8lknht52Ql/9
      LxWZYLYiP/khhr/274hcrzpR+5M/TOOxZ3jjt35dM66zv/17OF/7MoZX/7Iisz7yEZSP/mOa
      /+OPa3TFf/pH2K+8RPM3v1S169DjyD/1r/D/+19CyVQdw/Arv8N8NMbwf//DiszV0c2Jf/xr
      XP3WH5JPrlbkPY9+BG+o7xafnPY6Wbt+1mQbHEDkkcfPVlqn/Dd/5Wt+dQ1edrgGhsUdwC5P
      8sdfeYkPfPSHK7/+AD0HjzP6ja9RbOytyGw2O0TTIIBBEteT1FYzi+1mfE49xAKpRSNyorpS
      LqetCIKAnLJr5GrZwNrzZXXMKmvxTGu/GVpbVFminHBV2oLZjCAINMwLOG5Ul+tdB0WMskrv
      QlZzvKhCOeamMFO9Tgx9LkDQyG6OrZxwaORCo3fNjqQDJV2jKxtw5cqa85lseQRBoOnly5Tn
      5ypya9fjCK3b+I7WVXc1FqiYjjI8tUiwqZHr167S3nwOw/pAXnr+G4xML9Npvel0MtOTUyQz
      BQJdbRw85CcWWQK3rRKd+aBFg250QkFgy3EJgrhptk5gTXejHwvC2szfRtZ0N55PWOt74/m2
      HIOwZbjMVoGFAlt/vuItghBFUUQpGlGK1ccjQZVu8x1ttuPm2HbVAcyuRj7xiU9skpdKJboO
      nuTAicfw+BvWpRI9gwc1es3ND+7zv86dSSSTjI1PVdomk4kjhwZve0xd7Ae4ceE8iiqTUCSU
      sVnOPX56r4ekcx9inhoj+Hu/WWlLgUb4wh/c9pi9v68D7e1B3jl/iZXlJexO150P0NHZAlUW
      kXPW6n95yx2PqYs7gCfYySOnjzAyG974uLbvWQzHWFyJVdoel53utiYuDU0hy9UpwYEuPTzk
      XlAXDgCQSGVpawuRTiTvrLyPcLz5LZr+6iuVtvXUY/C5X6Px9/8ZSrY6+2H8Z/8PO19/17kV
      deMAjz51jmgsgdfn3+uh7CpK0YSctlfacs4MQDllQ83VTGMqdfG0uu+om09VMphoaGjAULO5
      IBkLsxyJUypkKSkqqVRqD0eosx+pmzvAJpQi03OrGCUZOWuiqJoRzA6czr0emM5+om7uAJtQ
      iphsLhxWC8VigeGJWZoCnr0elc4+o34dwGBHzYWJpAu4XR4ee+Q001PT+6IyoU79UL+PQAgM
      Hj6mkQz0du3RWO4dEa+HsZ6qXU3NjTQAo92dlPL5itxlMZN2OblRo+sNtdAETHS0krFV57xP
      2G0gihpdm99HCzATaiFaLFTkB90uXGazRtdgNtEGzDc1slQj7/F5MBskjS5AiyCw0uBnukbe
      1hDAIwibdANGI6teD6M18sabNnd1UKyZ+XJaLWSdWps9bS0Egcn2VtKWaijEcbsd0WTU6Fq9
      XkLAbCjIar7a7wG3C8+6zQ9cjbCdcC9rhKWLBVKF6gVpMRjxWq0sp1MoNdGuAZudkqKQyOcq
      MpMk4bfZCWfSmjBir9WGAERz1S/dIIo02B2sZrMU5Wo0r9tiwShKRLLVYuCCIBB0OInncuTK
      1WwKTrMZq9HISromYg0IOpykigUyxepErc1owm2xsJjSTms32h3kyqUNNhvwWm2bbPbb7MiK
      Qvw92WxFQNDYLIkijXYH0WyWwkabJYlIJrN/q0TeTfQqkfuX+n0H0NHZBXQH0Hmg0R1A54Gm
      LmaByuUyC9NjLK0m8Qfb6GnX4/51doe6uAOMXH6bibkVItH4WjJeHZ1doi4coL3vEC6zSioW
      5trQ+F4PR+cBoi4egRxOF9GVRWTRQrAxsC5VmBgZJpYp0dniw+QMsLIcpqerbU/HqrO/qAsH
      AOgdOMTyG2+zGr+5cCLQ3tlFemiMYi7JuzdmOfvEI5UaYeVyedfWAWRZXs9IoXM/ks4VKZWr
      i2Y2iwGDKJLMFuvHAVKpJHa3D6/rZnoPlZGRMfoPHCCzMkVPZwtL4SidzQFEUcRgMOyaA0iS
      hMFQNx+VzjZ59xv/luWpoUr71Pt/gkBrDy986Td33wHSsUW+89Ib2H0hnjn7cCU9YrClhdHZ
      KKHg+oYYRcFokBgfG6erowWX2U42ndSD4XS2zbGVKMXZxUrblc5gKpZ4enZx9x1geW6avmNn
      WBy7TFmhUiZpYWaaRHyVmYUwzQ0+EA30DR7QHKuHI+jshHLaRileTbagFEyoskgp7to8C5TP
      JFlYCqOqKsuLC+vZoVOEowkUucjs1BSr8Z3vzAp19HD5lW+SkG0Ya2qEOd1uDhx/mCbPnXfy
      6+jcLTbdAZLpDPl4lPFEBMnpIzw6CqUiZqNIKWMimjfht5h3fMLpiWHyBgeNhiyFMljWR7Cw
      FCGWypOI++js6Lh9Jzo6d4lNdwCjCAXJihGJYHMTJrGMyewk4HaB1YfPBqNjE6hygZHRcWoy
      d7wnfIEgXpuZsmjDUHP2Jr+blXCY5pA+zamze2xwAIXh4VGUYhFXwMX1CxeRLD6Qk0wsR7Eg
      k0gmMVttlRph2ymQB9DQ2ktnZ4jnnjmrcYDJ2UVOnDxFc4P3B7dKR+c9sik79Jknnqy0tsoO
      7Qv8YMWq58cuMz45x3I0x7NPPVFxoKPHjjExNcO1oVGefvTkD3SO/cr1qTAvXZyqtIN+Jz90
      dpCLY0vkC9V1iv42P4IAwzPV9OEWk4HjfUGuT4VJZqqbUbqaPTQ9wLWZd30WKJ9NI0om3B6v
      pkLMxMgNJhYiBLsO3PrgBxz/6kWOv/vFStvVMQhnfxvpe/8HUrSaKlz4xL9AEESkv/mXFZno
      bYG+LyG+9gWk2ZqSoe//PGH5Yf7yr79ZkRmNBj7z6U/xne99n/HJ6Yr81ImjnDpxdMuxvfbG
      21y9PlxpHxzs49EzD/GlL39Fo/djn/wYF8ZXef7tasjLwc4GPv3cUb7+yhCFUnVX4jMnukjl
      Crw9VK194HfZePZUF8+/NUaixpEfO9RGa+P202pucoBYeJFwIk93ZyvTExM0tnWhZGNEMzJt
      zT4mxqdo6ezBYdlZ0Fr34UdwB8OsRKLIKpX06MlEnGgshSOQvn0HDzD2uERopDoBYRbWvoPA
      iJ3yYjVfjOVZCUSJ4JWqzNC0lnzLN2HDPlSV204bMXujfPT8n1ZkgtkKn/4UpyZe4dC7L1fk
      jiZID/Tz3/72+5px/fQPneNY5DX6x6oFOSy+jyOqp/jE2Bc1uo7S05zKv0xf9D9Udf1PAkd5
      +PwvoeQSFbmz74tYo7M8/uZvV2SmlsNw6j9x/PK/oByZrMh9zb8Djedu9dHdkk0OIJnt2IQE
      Y0PD+Dq6mZkcA0XAbZO4fC3CwIEBxoZHOHb00LZPBrAweY3L4xGKxSL9NenPO7t7wbpKc6c+
      A7Rd1LK0VhTjZlsVQRW0svLanLMqi1q5IqCUJYqr1XcvwbyenS5t18jlnBVnKcEnrv1zzfkN
      H/seqYiH7ER7RSZ2e7GraGQA7pIBZdmNfLG6eV0xrFUEkq+0o9TuN/64BTXq0OjK6bXHcflG
      CHm+5jM4t7M925scIJtcpWh04VDS2G1W4pIKkgWr2UBDo42J0TFyhZ1nqTSZzBQLeUSDSVOs
      YTmSILa8wMDxRyqyuclhikYPAauCaPcTXl6hq0MvoreXKCUD6SFtgXTPfZy2cVONsKWlMEar
      i4a2RkavXCIQbEfOhJmPFejuaCaxGqWrp3fr3u5ALrbI+dEwZ8+c4JW3Lq+V61l3ggMD3fhD
      HRRSMQiu/eoEGoPMLEUpKHkuX5vmzJmHHuhgOFnRzjmrqro+Lm2AiCLLsCHXgcqa7sYcCIqi
      bJkNpFwuV+poaXU3fw7ylv2qlLfoV5ZllE12rH2f6gY7ZEVG2TDPftOOzf0qTI2P8fzf/lVF
      5nS6+NFPf/a2Nm+aBTp++uFK6/hx3/q/fBXZ4SM7z85mtLnwGHL83n/4Eh//kR/XvAQ3htp5
      8y/+AmOgg8G+7rXBGdaecUXJRHuokWgsSVuTd18Fw7178Qrn371UaXd1tvO+Z57kD//kzykW
      qylJPvrh92PfYK8gCOvj0qaHESUJNuqyprsxlYwoikiSxEbWPt+tdDd/DtKW/QoYtuhXkjaX
      MhKEte9TQNC4gCRKKNLWdmzuV6S5tMoPzfxdVeYLYjD8/G1t3tVZIFWRMTn8fPTDH0RQSpq/
      Pf/1/8FiLE1n080hyUxPTZMvyBga2ukIOkknYvsuGG4wdp72sf9caZstTwNP8uGJ/4qarykl
      mj9BYfPhOjUoOTP5uWr5XqnQcBvtNXbVAYxWFydPbp7jT6fSHH/kCfyzC/QfuZkNTqJnQDsl
      6vP5Nh17v1OKuTUvimoggBPIToZQc9WEUM7Cva2X+6BSF28vE9cvMz4yjre1jbffenuvh6Pz
      AFEXDtA72Mv05DhvvPx9Glr0WCCd3aMuHMDmbqS3px2Pw0YiHrvzATo6d4m6cABYm7Uzmoyo
      6gNWJU9nT6mbja4PnX2WcrlcmfrU0dkN6uYOIAgCRqNRszq8sjDD1OwiuXSCQlklEons3QB1
      9iV1cwfYhJInkihhlrJElRTJ3DK+ptBej0pnn1G/DqAqSEYzRlFFLhcIr2Zobu/c61HddYZ7
      Onn9A89W2r0dnXwIuHhokHJNEYmnbFYW2kJ8p0a3pbGJHwFeOPsosWQ1ivLDTQ0IgsBf1+i6
      nU5+Bvj+w6eY76j+kDzTHqLVauX8kWpgomRaqxAz0d7KfLoqH2xsoNVq5i9r+gX4nCRx5UA/
      F6mGKBwZGOQpUdik+9M2G6PdnbxWI+9p7+DDwMWDA5Rq1j6etNtYCrXwQo1usKGBHwO+c/YM
      0Xi8Iv9gUyNGg4Gv1+i6HA4+A7z68Alm26oLZE+3t9LscvKXH3i2jh1AsmJSU6RKJtobA/hb
      B4ksL+Bu31/TpCm7nYVgdZORz7OW+eKd44fJ18S8nLTbySqyRtfkWYuZWg74iNiqYdJ5swlB
      EDS6hfUKNxGfhwWhGl+TsVpJ2228capajsokSXyUtZJFl63VdzJHSxPNoqTpF0AVBBIup0be
      5nICwibdsiSRtts0cs+6zeePHSJbqkYInHDYyQqqRtfgXgvFWfH7WKkpkZS3mJEl7dhyVuua
      zV4vC2o1Liljs1IyGlkINtaxAyDQ1addCbbvs4tfZ+/Ra4S9B+5ljTBFVTXRioIgIArCpshP
      URRBVTU1tBAEJEFAVhVNQKgoCCCgjeYUQBJEZFXVRIqu6QqbIjQlUXzPY7tXutu3+b3ZUatb
      uQM4HPfPvlBRFHe1RhjoSbnuZ8qyovkxkCQBQRAol5V6fgTS0bk7fPGPvsbo5Gyl/ckPnaOr
      rYUvfPFPdQfQ2f981vn3yN43K22zuQnJYOa3vF/SHUBn/5OdDFG40Vdpu496MHnNJK/01YcD
      pJIJxoevsZrM0dTey+E+fWO8zt1DzpuRs9ZKWy0bQBGQs9b6CIWYHb+BYlibZTGbd553VEdn
      u9SFA/QfOY2xnCaZTLK8Et7r4eg8QNTFI5DBYGBhZoLluEpH/81blcL48DDheIbOkA+jM0A4
      HGOwV3880rl71IUDALR0dDMx/xZj04ucPNQLiIRCLaRLCyAXePOdKzz3zOMPdFoUnZ2xjbQo
      e4fRaKK9Z4DW7vVALbXMxcvX6ertQyzFOX6wl7GpeQa6QvsqLYrOvadu0qIARBcnefH1C5js
      Pv6n555GWh9ba2c3M+EsXa03o/ZE+vt7KasCnsZ2RMmIv7TzjHQ6+4vf+vJ3WVpNVto/+5GH
      OdHfsu1+dr9IXjKKt7GVdCKColJxgMmRG8SjKwxPzvHQkX4QRHwBbV4XSZ8hes9k8kWWotW8
      QkZJor3JzUIkRa4m4VaD247L/t4/12y+xN+9MaqRffzsIFcnVxibi1Zk3S1ejvcG+drLNzS6
      H3ikl7lwkqsTKxVZS8DJY4fb+O0/eplsTZr3n//ISTqCWydi+2Xh36KI1QzTFuH/Be6CA8Qj
      S6zE83R3hpienKCptQuTUCKeKdHgcTAxMU5TazcO6862Lnr9TcQuv4rgCFYufli7LTW09uE0
      7rfUV3vD4swEX/uzP660PT4fP//5X+Glv/lzZqerWZWf+9DH6D54jHeHq1UUJUng7NEOrk2F
      CccyFXln0EOrvcCj539Gcy7xsRcxTT6P/Z2/r8jMJ94HPT+D/fXf0OgKx/4NocVv4jz/+xWZ
      pfcpOPwFPpv6TZR8dV9DQP5PwNYOkJsNUl6sPhEY0zZ2ckVucgDBaMUmxNeyQ7d3Mz05QaPP
      xXI0gZqUcAXbmJ6c4NDBgR2cDuZnJogXoNWVoShXa4SlUmnGR69T6DvK4OCOut73vH5tjv/+
      vWuVdlezh3/yw4/wu3/yCivx6oX62Q8e54Bhic+5vl6RCfY24Ff4mO0VZNc7FbnZdJRywo3v
      279YkUkmKxz9a5yX/wB56MWK3Pr4P0Q4+AGM8xvy8KsCbek0gXB1y6ollUYAToW121jNskwh
      Zdb0IXnX1oAMiw7UbE2UaGFzasWbFGMuyjWZq5Xizn6QNziASmRpDl+oG8PKLKIkIgCBxibC
      8SSqCqIoIaCiygVGJ+bo6dlemaT+44/jaJwnGGyhNnVkqVTC5/fTEPDvyJAHgROld+hNVnPl
      G93HgUf4hcy/QU5WC1m4yl+glHISe+twRWZoCuIAUkNdFG7kK3LfET9GuwHPhUBFJljWKnXa
      ppxQI7d021AHJPILG6oEqQKlhEMjNyScoLJJVy1LlNM2jVxoWYu0LSw1oKRrVmyLRl6/MMwf
      f/3FiqyrtYl/+nMfv93HtC02OYCiwML0NF09HcxNTRJq72R2cpxCLoetbYCl2QlCHV2VGmE7
      oVQqbZqaUlVQFQWL1XqLo3TKqy5yl6sxLUphbcYsP9RBebG6O8r+DxwgCqDW/DLdTDejauWV
      r6FWV9lad2MS3t3gtOk6h93/rtIW7UeBrR1AUVXkmmzSa4l0b//rvCk7dN+BauGL/vVC1W5H
      PzezV7oGf7ASRkPvfI/hFZmp+TBPPnam8h4wcOgIvtUoqWQC0De/66xRijtJXe+utI35EPZb
      6M6P3+D5P6tWnnF4/Hzq8//ytv3v+ixQY6iLkfnLrK4qmkzPQ9dvEM3KuD0P1saTN6/P8drV
      aqx6X6ufDz/WzyuXZyjX/Jqd7G+uj7iVXUYpGSinqpu1xMytnxCCYpQfMVdLOommO/+QbnKA
      mYkRIrEMHR3NTM8u4Q00Y1bTRHMChwe6mRm9SN7USn9HYKv+7ojLF8BqNmLzN2vqA3g9DuK5
      KE7vnVNa7yc64y9infpype02nwX+Txa+9a8pFaoZEg43/jqW3R/efUU54SDxbvUJRmpowHkb
      fdjCAULtHaSyI6wuxThw/BizI6N09HYTHx0jl1xFlsyUSzvfOzw9cp2BU2eZvf42JQXM6y/C
      4ZUwi/NLBDurU0CKXKIks1ZPWDRQLhX3XbSoLW6gYaJqk8WzNpvxbHoUJV+d2XHLOb0+wD1g
      00vwyNAwHd0D5COzrK7GKZZVVEVBkWVSqTSZVILldImDvU3bPlkpn6W5+wBvv/U2ks1TqRAJ
      YLWYMFssyErVuWbGh8kIdoI2hbxoJ1uCvvbgFj3fvyh5M6V49bHPkF6bEsxON2vqA7j0+gD3
      hE0O4LDbmZ+doaO7i/ziHH0DvSzOT2M0GLAHQhxubqErv7PFKkEt8cK3X0AyGDAINk0axMee
      /SDOd15HrNmc39rRzcTcMopc5NLQEs+de2zfBcNtrpd1qxpYsl4jrMaOzf0qCMqG86l3tnnT
      LFBbV3Vqs3U9E1trR7dGy77DDCHlQpZMNsfi0jKd/RYUlcp7wOzEDd65MoYvmOdQbxsgMzU2
      xuxKHGdfK2dOH2V4bJKD/d37Khhuc72sW9XAklD0GmG3rREmiBvOJ9zZ5l2dBbJ4mvnJn/r0
      ln+bml7gzJmHcPluLpBI9B46Sm9NOWKf+06vNDo626MuZtYmR8fo7W5laGSUSFyvFK+ze9SF
      A6j5Vb778iUOnzxGeGn+zgfo6Nwl6sIBug8/RH+rgz/78lfo6j945wN0dO4SdeEACCJZ1cov
      /9IvMj1yda9Ho/MAUR8OAPR1tfDaa69tygito3MvqZuNri1dg7R06RsBdHaXunGATagK169c
      Iq8a6WhyIjkCLC9FGNDToujcRermEWgTchaDPUiTy0YqneL1Ny/S3a1f/Dp3l/q9A0hm8plp
      SoKCz2Ph8EAXU3NL9O6zWKDJthDvPnGm0u7s6eUZYLyznXKhunPLbTazFGzk1RrdpuZmPgS8
      fvo4iVj1x+FZvxdBEHmhRtfldvNJ4PzRQyz5q/tsH2tuotlsZqTmx+VmjbDFxgaWa+TdXjeS
      2aTpF+DTkshITyfXa+SDvV2cEYRNup+0WphqC3G+Rt7e3c37gJfOnKaQr9r8IZeThCrzSo1u
      QzDIR4A3Th0j3lWtGPSM349kNGjO53C5+FHg3SMHWPRWF1HPNDfR5LDzwhNn6tgBBCM9XSEK
      igGX1QAGM8V87s7H3Wesej0M93ZV2samtZXw7z3+sKZGWJ/LSUJQNboFjw+AiQi+3RAAABSf
      SURBVLYQkZqL+hG7DUEQNLr+9Qo3My1BJq3VwLqDLid2p4NvP/lYRWaSJM4Blw/0c9lbjc16
      X0cbPoNB0y+AIoisBPwauachgLphDABFg5Gox62RS41rgZVjXe2aGmHPWC0kFIdGN7deI2yy
      LcSKrxpE+JDDhlGSNLre9d2Fsy3NjFuqe4YH3S7cZjPDvV1VB6jPEkkCEjKZnAzrwcClRIJc
      Locsy7taIule4UTggLu6uTtoNJFIJOh3uinVBI0p+TxmWdHo+i1WEokEXXYnDcbqRS2Vygig
      0bWv99tqsWFxVyNuLIqKnMtrdA2iSCKRoMlo0shdCOQzGY0MIJ1K4RUl7dgkA8lkcpNuMZvF
      scHmZpOZRCJBn9NNseYa3Mpmn9W2brMDf01RdUOpjLhB12Y0kkgkCFksmGrkVkWlnMtxwO2t
      1gi7n0ilUrtaIimRSOglkvYp9fsSrKOzC+gOoPNAozuAzgON7gA6DzR1MQ06MzHCW6+/Qkq1
      cezEQ5w8tLOEWzo626Uu7gCiINA9cIhyaoXZRb1Eks7uURcO0NrVh1jO09jSQWvwZm7QtTyl
      49Nz5LMpirJKLBbb03Hq7D/q4hEIwOP1EcnI+Lw3VzRVjFYX5egMq+TIlQ1Y3T68t+1FR2d7
      1I0DJOJRYtEIk9NzdIUaAIFUbAWrpxFTeZWh+QiPtLbtu7QoOnvLrjuAqsjcuHoJT3M3zQ2e
      akIPVSEcjtLev55zRSmxuBjB5lFwBNw88nAvywvzdHd17Ku0KDp7y65/q5PX36FoauTKO68R
      eO6DmNZTuVjtdiSDCbt1PQOmaOKhR7WRhI4uPRxa5+6y6y/BDcEQ08NXUM1ualO3NwZbeerc
      UzT5Xbc+WEfnLrN1duh4ho72FqZnF/E2NGNR0kTzAj3NDi7dmKetq5OWhp29jsZXV4jE4jjK
      INdkhrty+RIlcwPR1TAN/jO370RH5y6x6Q4Qau/EYjKwuhRl8PgxSpkETaEOBKVIuVjGaDJQ
      KBRRlTLRWBxlm7Gk+VyGRDJJNpumNkVka6iZpanr2L3br/Sno7NTNiXHHR0epqNngFx4hlg0
      sZYdWl3LEC0YbQwOehkZGoMWP3J5+/sH+o6f5ROeEJ2d2nyjY2MTuDw+5HLpFkfq6Nx9NtwB
      VGxWKzNTUziaO1HSMfr6e1mYnUEUBBTJzOLsHAMHDyCIBhoa/Ijb3JOSS8VYXFxifGpGc/dw
      u10U8nlkVbn1wTo6d5lN2aHbu3srrbaOte1ltRmjnX19/CBMDV+koDopFLXz6n5/A9kyFAt6
      NXid3WPXZ4Fauw+g5uIMDQ0h19wBZubmiMSyZJOruz0knQeYLWeBlsNxQqEmFlZiONx+nIYC
      y8kSrT4ri6sJTDYPB3aYn0cUBVKpNG5/i6ZSfGsohBCO09jauVNbdHS25MbLXyMZnqu0O48/
      hcPXzNXv/rfNDtDc3EwsXSKbzHPoxHFmR0Zo6eohMTK6thFdNBCPRoGdOcDizAQDp55gfug8
      ZYXKQtjE+DjjM4u4GtsruuVClkwRrEYVwWgjl0nhcunrBDrbIzTxPZom3qm0ba0tGGwW+i79
      2UYHUDh//iKhzh6sYpGJkTEEDKyuLBOJhGk9cpSiEsVs21mhikIyiqNlgPnxIUSrS/MC3eD3
      kigo5GpSnyzMzZBRzTRaFRIlAwarC/3619kuudkghZGa1DOPuxAbTaRHujY6gMCRY8coK+Bw
      OrC6MlhsdvLZDMeOHMVis+EVRBxOBzvBaLMz9MYLzIdj9B5+SPMIdPKxcxRe/BYGUzW9R0tr
      e6VG2NjUMmcf14PhdLbPNmqECdid1Z9Yu8Op+T+AyWhkpxTTUebDcTKZDLPTk5w6MlCpFHn5
      rRd59fwNWnvhocN9gMzU+DjL0TSe3lYefaSb2ZkZ+no69WA4nW1RXzXCfvInt/ybYA3wj/7R
      z2OoJHiS6D14hN4aHWdP570eos4DRl38rA1dvoLDWOabL3yHlvY+zhzfuzTpqqqibJErTFFU
      TRlPQRAQYJOuKAhbZqxTFJWLo9ryT4e6g5iNdfEVPLDUxafvtCr8zbfeou/YIfK595aGMLy0
      wOzUeLUPl4eBw8e48u5bFGpepHsHD6OqKuPD1yoyi9XG4RMPce3bf0QqUp0e6374g1gtFq7+
      ya9WZJLZzsBn/iOj3/i/iA6/WpG3nf0pAgfPceEPflYzrkd+5WvMzkyzsrRQkTUGW2hrb6Pv
      7z6g0TV+9nnmZyeZvfJyReZrG6T/iU9w4c1XNTV5B4+cIJfNMD0+UpE5nG4Gjxzn6oW3NZ9b
      z+AhyMUYfvmrVZsdXo5/5HNcf+FPSIZnKvKu0x/A0dzHjcvvVmSiJHHykScYH7lOLFLdo93S
      1oHf5+PCN/69xo6HPvmrzF5+iaWRtyuypt6TdJz6B7z15/+3Rvf4hz/H6swNZi+/WLU51E//
      k59kZjmhqU0c9DuwmLa+ROfDSUrlatRAg9eG3bL9YuJ14QCh3qM8EU/w/Xev89T7P/qejnEv
      vYLl1d+ttA1tp+Dwf6Hz/G+gxGcrclvT74Ei0/fqL1dkkq8TTnydzvB3KM9frMithwZBPEDX
      bPXCE6xr/26KyLhr5I6kgkFWNboAggr+a3+N/Y2/qMgsZ34Y2n6RYkSbXtGmiHjDY1iu/m1F
      ZiILfIKeN/831EK1Yqal848xRUbpe/U3qjaHjsORP6Tz3d9Cjk5V+234/1BlM301/Yr+VuBz
      dES+S3nufNXmA31IKRN9r/6Tqg1GKzzyBs1DXyYw/HxFbn7sf8Ho/iEOzP25xg5R/SWa4u/i
      rZGb/AqC+uwmXVP5pwikbuCokRst54BPIv6PH4FcsjqOH/8DVpIpxr7zXysyZ7CbI5/83xH/
      9hcQI5NV3Y/+DvQ/w3apCwdAEAgnivz0P/wJXn3zAgc675wCvRD2kThfLSJsznZhB1JX+ygv
      V1/kTc84URVZo2tobsYBpIa7KA5Xg++kUx6MFgPFiK86NJsNC1BKOjRyOWsFWdTIAFChEPaS
      Ga+ukwg9XqyqoJEBuEsGSjG3Rq74AziBxIVB1Fz1Tmb5uJVS2Ku1Ob1mc/JqL+VFe0VufNoF
      oqjp15Buwgukhzsp3KimIBePezE5rZp+BbMZF5CdbCVbI3d3NWIYMGp0AZyKSG42SLpG7vA2
      Y1GFTbq2T5vILwU0cqvQjg2QhpsQMjVV2LMmnKk0vRNTVdvktb+bVqxIS1WbxZyBxOoKI1eq
      dyGzxcbRM+e4HfXhAMDJE4d44423OXFK3wvwoCJnrSiZmghjWUTOWsgvNFVEim1tH0ph2U95
      oerIjrwZe3KYwQu/VpEJrha4XxzA5W/m3LlmjWyrxNW7lRJd5/6jnLKTuNRfaRsCjdxpxapu
      HGATqsyl8+9SxEBH0AkWH9F4mgO97Xc+VueBRJVFlLyl0pYL5jseUxeJsbZEzmLztRLyu8nl
      87xz6Qb9PW13Pk5HZxvU7x1AspGLjZBApL3RyemjLQyNTXOwrxOAiY5Wvvuh5yrqrU1N/Bjw
      9+eeIJ5KVeQfb2pAVRS+XqPrc7n4DPDiYw8z39tZkT/X1orf4+arNbpmk4lPA6+fOsZoQ7UM
      0eN93RywWTW6AP+rKDLV2sL4iSMVWU9biKOiuEn352wWbvR182qNvL+9g48AX//AMxSK1Rf0
      H/e4iaDy7RrdUGMjnwKef/pxosnq7MnHgo0IgsBf1eh6nE5+Fnjx0YeY667eRd/X0UaTW2uz
      yWjg88AbJ48y7KtOKDza18MRq2WTHZ+XJC4dGuRdqfrIeqx/gHNb2PyzdhvDvV28UiPvbWvn
      Y8DXnztHvlCoyD/l8xAziDxfo9vc0MBPAN96+nFW4/GK/CPBJowGA1+r0XU7HPwc8PKZ08x0
      hiryZzrbaHG7+OqHnqtjBxAkDh8/hqoKSKIAgkCgpiZUzmJhpcFfadvXK7is+jys1swHF01G
      ZFXV6Kr2tdmDqNvFilp96cpZzJSMBo2uZT0EIuFyauQZmxVZlDQyAFUQmGlt4R2lurHHGGrm
      iCBs0pVFiYzVqpE3utbCTsJ+n6ZGWMloJG8xa3Rt6zZHvB4i5mqISsFkRNhwPnm9RljM7WJF
      qfa7lc2m9TCBhHODzXYrsihuaXPKYdfIk461z3ijblmUyG6wObBuc8Tv1dQIKxmN5DbYbHGv
      OeSqx82KUarabDahSNrvo7ReIyzmdrEiV7+PnMVC2bBmc53XCNuaXC6HVzLwVEv1kchlsZBI
      JDgdaNJcOBZFRVXR6FrXa0cd8frptFVfkzyihFQsa3QlUSSbzdLvdOOXqr8XTUYzpVxOowtr
      9bLarXZMNfJmq510KrVJt5zL0WQya+R+m51EIsFjwRByTdYAqVjCI0oaXad5rbbW6YYmcjUX
      jlUBQVA1uhaDgUQiwWGPn3ZrdfrQK0qIxaJGVxSEtZpdDhfelupFFjSaKWazm+zIpFO0WWwa
      edBmJ5VMbtKV8zkajSaN3Gdbq/v1aFML5VqbSyXcgrilzScDjeRqa6CpIMqKRte8bvMhj5dW
      i7V6PsmAUFizWa8R9h7Qa4TtX+r3JVhHZxfQHUDngUZ3AJ0HmrqYBZqdGOHN118hjZ2jx0/r
      JZJ0do36uAMIAj2DhyknV5hbiuz1aHQeIOrCAdq6+hBKOQLNbbQ0+u58gI7OXaIuHoEA3B4v
      jkwZv69aImlmYoxUSaAj6MVg8xJfDRMMNt22Hx2d7VA3DpBMxIitRpiYml0vkQTB1g6yIyMk
      YhGWJxfo6OlbS9SrqijK7uUQ3e3z6ewee1IiaejaZTzN3QQDbm2JpNU47QPVVcrZqTH8oQ6E
      9CLlcpmNS3a7uYZ3H64X6rwH9qREUk5qYPqtV/G/v1oiyeZwYjSacNjWw1mVEul0gby8SGuz
      lyPBPqIri+BqQRAERFHctZVgQRAqaTR09he77gANwRauvHoBs9OvKZHU0NTCE0968HvXow9F
      E8dOntAcGwrpxTN07i677gDxaITVWBz7xhJJl9ZKJMWjERoD+rZInd1h16dB89kU8USCbDal
      KZEUCjWzOHUdq14iSWcX2fU7QN/xJ/mEp3VTiaSJiUncXh+KXiJJZxfZdAco5NKsRKKoqspq
      eIWSrFDIplmJxDSynZJLx1leXmFyZk5TIsnpdFLI57fMyqajc6/YdAeIxROkYlFS0RVUi5Ol
      kQn8HivJaJRUbBnMTpZGJzg02LtVf3dkaugCOdlJNpfXyBsaGsnLAoWaLXE6OveaTXcAq0mi
      JFmRFJFQWwijqGA1SpQNtqpM2PkdINQ1iJyJMjQ0rCmRND07RySeJZeM7rhvHZ3tssEBFK5f
      H0Ytl3EFHFy/cBHBbF2XlXD5HVy7cBHRvLP6AACSJJLJZvH4GjaUSGrG53HQ3KqnPdHZPTZV
      iXz07FOVli+wNiPT19m2SbZTFmfGOXDqLHND72hKJE1OTDA2vYi7aWell3R0dsKuToMWUlGc
      oUHiszcQLG5NiaSAz4O/sZFcTT7MxOoyy6sJcuk4hbLKykp4i151dHbOrk6DGq02rr/2AouR
      ON2HTm8okfQMxZe+hcFczeZVKpWIZ7JIljJLM0s0trRXYnJuBsXtFnos0P5kVx2gmI6xEEmQ
      TqeZm5ni9NHBSomkK2+/zKvvDtHaA6cPr80webw+opllVEUmnkgT6jBUIjN3Mzpzt8+ns3vU
      TVqUy5cu0d3Tg9FkxmwyAjLjN4aIpHL0drdhdQWILC/S1tZKWk+LonOXqAsHGL58BZNJ5sLI
      7HsqkaTnBdK5W9TFlki7VeHb330LX8BPLpfZ6+HoPEDUhQO09h7lsdMDXL90mWBL614PR+cB
      oi4cAEEgkirzmZ/5NAuTI3fW19G5S9SHAwAnjh3g9dff4tiJU3s9FJ0HiLpxAHeghWeeOUfA
      bbuzcg217/C12a1vymunMO+kW7v5/VZzA1v1UbsmsVW/O9XdaEftOO+VzffCjt2w+Vbf3a10
      b8rrJivETqmtGbbVv+/0943/vp3sbpxju+O509julc138xy7YfNOz1c3d4C7wVbTooIgUMpn
      GBoaJl8sMzc9QTiWuqXu7aZW5XKJlfDqbc93U5aOR7gxNEKhJN9RN5+OcfXaNaKJzG11BUEg
      Hlni2rVrzC6Gb2uzIAgo5SJjoyNk8qXb6wJLyysAhBdnmZxdRLjF5yAIsLS8DICqKszPL9xG
      VyCyskxZVilkk4yMTqCw+eKGtZoEscgy+ZJCOrHK8NgkKsItnAEWZieZW4pQyqcZHZtEUW/t
      OCsLM0zPLZFLx7lxY4hcUa58FvvKAW5FvlimI+Tl2pWrFCUXi9Pj7KQUSCK2ytz84nvSNZjt
      tPhtzCzeOX5paWYGyerC7bzz458nEKSnvYmyfOflm7npcQItrYyN3n5iIZdJMD69Vj3eaHWS
      j4a51b68Yi7NyPgUACtz00zMLnKrkSjFHBNTk+TLMtevXcdounUld6VcZH5mgkROZmJqlgab
      zMxKektdVZGxexqILy8wOj5Fc8DKxOzqlroAJpuL7OoKssFMe4uPqemFyt8eCAeQKDM+G+fw
      4QFysQXi8Qw7CWzwNTRhNb639CgiMrMLkfVV7dvT2n+QtoCd68Ojd+5YVZldCNPa3HBHVX+g
      gdnJCbL5228ysjm9eNedLxVdwdHYwq0uVbPNRcDrRCnnuDE2TSYWJpUtbqkrmW00BTyAiqwa
      sIlFllaTW+qKRjPNjWvljcwGgblwEustHtAFUSKyME2gtQODwYTd5UQt3trGxOoSzmAImwST
      M4tYrVXr7vt3gPfC3Nw8AgaSmSJGg0hLZwd3viw3szg3TWQ1QjSZxee6/a91dDUCoojhPeQT
      Sqwus7C8ir/5zqHgqlrGbPNglLZ+lKjFYDAioG7af73V+SORCHNLS8wvrODyC5SbA1teHJnE
      KpFIhBmnj6fPPc3M9Awu29buUsgkWFgKk8NOY8DFcixDd//WlT5L+QzT8ysIKQNuo4miXMRo
      3PryLOWShGMZZCmGx2nm0qURugYOb22cWmRxcRV3wEBYzYEganI8/f9yMZeJvBwxzwAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Отклонения модели' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Отклонения средней оценки от средней цены' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Распределение выгоды' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Распределение стока по годам' width='192'>
      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
      +ZoskZcb01EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Сводка общая' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Сводка от 2015' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Снижение цены' width='192'>
      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
      wRzxlw8cAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Снижение цены - таблица' width='192'>
      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
      5PFnqgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Средние цены' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
